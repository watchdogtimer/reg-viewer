{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["accessors","classroomForSessionA","name","room","classroomForSessionB","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","columns","loadTable","fullData","dupes","invalidRows","afterSchoolPrograms","afterSchoolProgramsColumns","dataMapSessionA","dataMapSessionB","bind","assertThisInitialized","showAll","setState","csvRows","map","a","data","b","headers","h","idx","Header","accessor","classesA","classesB","_loop","row","tableRow","csvCol","length","sessionAMerged","sessionA","spanish","characterBuilders","primetime","none","sessionBMerged","sessionB","afterProgramming","roomA","find","c","roomB","sessionAClassroom","sessionBClassroom","push","dataMapSessionARowData","dataMapSessionBRowData","includes","names","dupeNames","dupeCount","invalidCount","forEach","studentFirst","studentLast","toLowerCase","trim","assign","console","log","sort","sortStudents","parseInt","id","err","alert","col","react_default","createElement","key","className","react_csv_reader_default","cssClass","label","onFileLoaded","onError","showError","parserOptions","skipEmptyLines","Fragment","onClick","react_csv","es","filterable","defaultPageSize","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c16be9b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport CSVReader from 'react-csv-reader';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport {CSVLink} from 'react-csv';\n\nconst accessors = [\n  \"id\",\n  \"studentFirst\",\n  \"studentLast\",\n  \"grade\",\n  \"teacher\",\n  \"parentFirst\",\n  \"parentLast\",\n  \"parentEmail\",\n  \"parentPhone\",\n  \"alternateFirst\",\n  \"alternateLast\",\n  \"alternateEmail\",\n  \"alternatePhone\",\n  \"spanish\",\n  \"characterBuilders\",\n  \"primetime\",\n  \"none\",\n  \"ignore1\",\n  \"ignore2\",\n  \"sessionA\",\n  \"sessionB\",\n];\n\nconst classroomForSessionA = [\n  { name: \"Chess (TK-5th) A\", room: \"B-25\" },\n  { name: \"Yoga (TK-5th) A\", room: \"Room 5\" },\n  { name: \"Circus Arts (TK-5th) A\", room: \"Kindergarten Playground\" },\n  { name: \"Capoeira (3rd-5th) A\", room: \"Auditorium\" },\n  { name: \"Soccer (3rd-5th) A\", room: \"Grass\" },\n  { name: \"Coding (2nd-5th) A\", room: \"Room 2\" },\n  { name: \"Ceramics (2nd-5th) A\", room: \"Ceramics\" },\n  { name: \"Art (K-2nd) A\", room: \"Kindergarten Tables\" },\n  { name: \"WOW LEGO® Early Engineering 1 (TK-2nd) A\", room: \"Room 1\" },\n  { name: \"Gardening (K-5th) A\", room: \"Garden\" },\n  { name: \"Flamenco (TK-5th) A\", room: \"B-21\" },\n  { name: \"WOW LEGO® Elem. Engineering 2 (2nd-5th) A\", room: \"Room 7\"},\n  { name: \"Tennis (K-1st) A\", room: \"Basketball Court\"},\n];\n\nconst classroomForSessionB = [\n  { name: \"Coding (2nd-5th) B\", room: \"Room 2\" },\n  { name: \"Ceramics (TK-1) B\", room: \"Ceramics\" },\n  { name: \"Chess (TK-5th) B\", room: \"B-25\" },\n  { name: \"Soccer (TK-2nd) B\", room: \"Grass\" },\n  { name: \"Tennis (2nd-5th) B\", room: \"Basketball Court\" },\n  { name: \"WOW LEGO® Elem. Engineering 2 (2nd-5th) B\", room: \"Room 7\" },\n  { name: \"Yoga (TK-5th) B\", room: \"Room 5\" },\n  { name: \"Flamenco (TK-5th) B\", room: \"B-21\" },\n  { name: \"Capoeira (K-2nd) B\", room: \"Auditorium\" },\n  { name: \"WOW LEGO® Early Engineering 1 (TK-2nd) B\", room: \"Room 1\" },\n  { name: \"Art (3rd-5th) B\", room: \"Kindergarten Tables\" },\n  { name: \"Gardening (K-5th) B\", room: \"Garden\" },\n  { name: \"Circus Arts (TK-5th) B\", room: \"Kindergarten Playground\" },\n];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      columns: [],\n      loadTable: false,\n      fullData: [],\n      dupes: [],\n      invalidRows: [],\n      afterSchoolPrograms: [],\n      afterSchoolProgramsColumns: [],\n      dataMapSessionA : {},\n      dataMapSessionB: {},\n    };\n    this.loadTable = this.loadTable.bind(this);\n    this.showAll = this.showAll.bind(this);\n  }\n\n  showAll() {\n    this.setState({showAll: true});\n  }\n\n  loadTable(csvRows) {\n    const fullData = [];\n    let dataMapSessionA = classroomForSessionA.map(a => {\n      return { name: a.name, data: []};\n    });\n\n    let dataMapSessionB = classroomForSessionB.map(b => {\n      return { name: b.name, data: []};\n    });\n\n    let headers = csvRows[0].map((h, idx) => {\n      return {'Header': h, 'accessor': accessors[idx] || h }\n    });\n\n    this.setState({columns: headers});\n\n    let classesA = [];\n    let classesB = [];\n    for(let row = 1; row < csvRows.length; row++) {\n      let tableRow = {};\n\n\n      for(let csvCol = 0; csvCol < csvRows[0].length; csvCol++) {\n        // set tableRow property\n        // property name = header\n        // property value = row value\n        tableRow[headers[csvCol].accessor] = csvRows[row][csvCol];\n      }\n\n      // Merging Rules for Concurrent After School Programming\n      // Spanish is always session A\n      // Primetime fills in session A or session B\n      // Character Builders files in session A or session B\n      // Primetime or Character Builders should be shown as after school programming IF session A and session B have classes\n      tableRow.sessionAMerged = tableRow.sessionA != 'None' && tableRow.sessionA != ''\n                                ? tableRow.sessionA\n                                : tableRow.spanish\n                                  ? tableRow.spanish\n                                  : tableRow.characterBuilders\n                                    ? tableRow.characterBuilders\n                                    : tableRow.primetime\n                                      ? tableRow.primetime\n                                      : tableRow.none ? tableRow.none : 'None';\n\n      tableRow.sessionBMerged = tableRow.sessionB != 'None' && tableRow.sessionB != ''\n                                ? tableRow.sessionB\n                                : tableRow.characterBuilders\n                                  ? tableRow.characterBuilders\n                                  : tableRow.primetime\n                                    ? tableRow.primetime\n                                    : tableRow.none ? tableRow.none : 'None';\n\n      tableRow.afterProgramming = tableRow.characterBuilders\n                                  ? tableRow.characterBuilders\n                                  : tableRow.primetime\n                                    ? tableRow.primetime\n                                    : tableRow.none ? tableRow.none : 'None';\n\n      const roomA = classroomForSessionA.find(c => c.name === tableRow.sessionA);\n      const roomB = classroomForSessionB.find(c => c.name === tableRow.sessionB);\n      tableRow.sessionAClassroom = tableRow.sessionA != 'None' && tableRow.sessionA != '' && roomA ? roomA.room : 'N/A';\n      tableRow.sessionBClassroom = tableRow.sessionB != 'None' && tableRow.sessionB != '' && roomB ? roomB.room : 'N/A';\n\n      fullData.push(tableRow);\n\n      // Push to class specific for sessionA and sessionB\n      const dataMapSessionARowData = dataMapSessionA.find(c => c.name === tableRow.sessionA);\n      if(dataMapSessionARowData) {\n        dataMapSessionARowData.data.push(tableRow);\n      }\n      const dataMapSessionBRowData = dataMapSessionB.find(c => c.name === tableRow.sessionB);\n      if(dataMapSessionBRowData) {\n        dataMapSessionBRowData.data.push(tableRow);\n      }\n\n      if(!classesA.includes(tableRow.sessionA)) {\n        classesA.push(tableRow.sessionA);\n      }\n      if(!classesB.includes(tableRow.sessionB)) {\n        classesB.push(tableRow.sessionB);\n      }\n    }\n\n    this.setState({fullData: fullData});\n    this.setState({dataMapSessionA: dataMapSessionA});\n    this.setState({dataMapSessionB: dataMapSessionB});\n\n    ////////// Dupes\n    // Find all where\n    const names = {};\n\n\n    const dupeNames = {};\n    let dupeCount = 0;\n    const dupes = [];\n    const invalidRows = [];\n    let invalidCount = 0;\n    this.state.fullData.forEach(row => {\n      if(!row.studentFirst || !row.studentLast) {\n        invalidCount++;\n        invalidRows.push(Object.assign({}, row));\n        console.log('invalid');\n        console.log(row);\n      }\n      else {\n        let name = row.studentFirst.toLowerCase().trim() + ' ' + row.studentLast.toLowerCase().trim();\n        if (names[name]) {\n          dupeCount++;\n          dupeNames[name] = 1;\n        }\n        else {\n          names[name] = 1;\n        }\n      }\n      if((row.sessionA == 'None' || row.sessionA == '' || row.sessionA == 'N/A') && (row.sessionB == 'None' || row.sessionB == '' || row.sessionB == 'N/A')) {\n        invalidCount++;\n        invalidRows.push(Object.assign({}, row));\n        console.log('invalid');\n        console.log(row);\n      }\n    });\n\n    // Now that we know the dupes. add all dupes with that value (otherwise, we missed the first occurrence of a dupe, since it was not detected yet\n    this.state.fullData.forEach(row => {\n      if(row.studentFirst && row.studentLast) {\n        let name = row.studentFirst.toLowerCase().trim() + ' ' + row.studentLast.toLowerCase().trim();\n        if (dupeNames[name]) {\n          dupes.push(Object.assign({}, row));\n        }\n      }\n    });\n\n    dupes.sort(this.sortStudents);\n    invalidRows.sort(this.sortStudents);\n\n    this.setState({dupeCount: dupeCount});\n    this.setState({dupes: dupes});\n    this.setState({invalidCount: invalidCount});\n    this.setState({invalidRows: invalidRows});\n    this.setState({loadTable: true});\n  }\n\n  sortStudents(a, b) {\n    if(a.studentLast < b.studentLast) {\n      return -1;\n    }\n    if(a.studentLast > b.studentLast) {\n      return 1;\n    }\n    else {\n      if(a.studentFirst < b.studentFirst) {\n        return -1;\n      }\n      if(a.studentFirst > b.studentFirst) {\n        return 1;\n      }\n      else {\n        if(parseInt(a.id, 10) < parseInt(b.id, 10)) {\n          return -1;\n        }\n        if(parseInt(a.id, 10) > parseInt(b.id, 10)) {\n          return 1;\n        }\n      }\n    }\n  }\n  showError(err) {\n    alert(err);\n  }\n\n  render() {\n    const headers = this.state.columns.map((col, idx) => {\n      return <li key={col.Header + idx}>{col.accessor}</li>\n    });\n\n    const afterSchoolProgramsColumns = [\n      {'Header': 'Student First Name', 'accessor': 'studentFirst'},\n      {'Header': 'Student Last Name', 'accessor': 'studentLast'},\n      {'Header': 'Grade', 'accessor': 'grade'},\n      {'Header': 'Teacher', 'accessor': 'teacher'},\n      {'Header': 'Parent First Name', 'accessor': 'parentFirst'},\n      {'Header': 'Parent Last Name', 'accessor': 'parentLast'},\n      {'Header': 'Parent Email', 'accessor': 'parentEmail'},\n      {'Header': 'Parent Phone', 'accessor': 'parentPhone'},\n      {'Header': 'Alternate First Name', 'accessor': 'alternateFirst'},\n      {'Header': 'Alternate Last Name', 'accessor': 'alternateLast'},\n      {'Header': 'Alternate Email', 'accessor': 'alternateEmail'},\n      {'Header': 'Alternate Phone', 'accessor': 'alternatePhone'},\n      {'Header': 'Spanish', 'accessor': 'spanish'},\n      {'Header': 'CB', 'accessor': 'characterBuilders'},\n      {'Header': 'PT', 'accessor': 'primetime'},\n      {'Header': 'A', 'accessor': 'sessionA'},\n      {'Header': 'B', 'accessor': 'sessionB'},\n      {'Header': 'A Merged', 'accessor': 'sessionAMerged'},\n      {'Header': 'B Merged', 'accessor': 'sessionBMerged'},\n      {'Header': 'A Classroom', 'accessor': 'sessionAClassroom'},\n      {'Header': 'B Classroom', 'accessor': 'sessionBClassroom'},\n      {'Header': 'After Programming', 'accessor': 'afterProgramming'},\n    ];\n\n    return (\n      <div className=\"App\">\n        <CSVReader\n          cssClass=\"csv-reader-input\"\n          label=\"Select CSV\"\n          onFileLoaded={this.loadTable}\n          onError={this.showError}\n          parserOptions={{skipEmptyLines: true}}\n        />\n        { this.state.loadTable &&\n          <>\n            <button onClick={this.showAll}>Show All</button>\n            <h1>{this.state.dupeCount} Duplicates</h1>\n            <CSVLink data={this.state.dupes}>Download Duplicates</CSVLink>\n            <br/>\n            <h1>Merged Master</h1>\n            <CSVLink data={this.state.fullData}>Download Merged Master</CSVLink>\n            <br/>\n            <h1>Session A</h1>\n          {this.state.dataMapSessionA.map((sessionA) => <><CSVLink\n              data={sessionA.data}>Download {sessionA.name}</CSVLink> ({sessionA.data.length} enrolled)<br/></>\n          )}\n            <h1>Session B</h1>\n          { this.state.dataMapSessionB.map((sessionB) =>\n            <><CSVLink\n              data={sessionB.data}>Download {sessionB.name}</CSVLink> ({sessionB.data.length} enrolled)<br/></>\n          )}\n            <br/>\n          {this.state.showAll &&\n           <>\n           <h1>All</h1>\n           < ReactTable\n              filterable\n              defaultPageSize={300}\n              data={this.state.fullData}\n              columns={this.state.columns}/></>\n          }\n          {this.state.invalidCount > 0 && <>\n            <h1>{this.state.invalidCount} Invalid</h1>\n            <ReactTable\n              defaultPageSize={50}\n              data={this.state.invalidRows}\n              columns={this.state.columns}/>\n          </>\n          }\n            <h1>{this.state.dupeCount} Duplicates</h1>\n            <ReactTable\n              defaultPageSize={50}\n              data={this.state.dupes}\n              columns={this.state.columns}/>\n\n            <h1>Merged Master</h1>\n            <ReactTable\n              defaultPageSize={this.state.fullData.length}\n              data={this.state.fullData}\n              columns={afterSchoolProgramsColumns}/>\n\n            <h1>Session A</h1>\n            {\n              this.state.dataMapSessionA.map((sessionA) =>\n                                               <>\n                                                 <h2>{sessionA.name} ({sessionA.data.length} enrolled)</h2>\n                                                 <ReactTable\n                                                   defaultPageSize={sessionA.data.length}\n                                                   data={sessionA.data}\n                                                   columns={afterSchoolProgramsColumns}/>\n                                               </>\n              )\n            }\n            <h1>Session B</h1>\n            {\n              this.state.dataMapSessionB.map((sessionB) =>\n                                               <>\n                                                 <h2>{sessionB.name} ({sessionB.data.length} enrolled)</h2>\n                                                 <ReactTable\n                                                   defaultPageSize={sessionB.data.length}\n                                                   data={sessionB.data}\n                                                   columns={afterSchoolProgramsColumns}/>\n                                               </>\n              )\n            }\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}