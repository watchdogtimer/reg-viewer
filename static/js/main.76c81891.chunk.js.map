{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["accessors","classroomForSessionA","name","room","classroomForSessionB","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","columns","loadTable","fullData","dupes","afterSchoolPrograms","afterSchoolProgramsColumns","dataMapSessionA","dataMapSessionB","bind","assertThisInitialized","csvRows","data","headers","map","h","idx","Header","accessor","setState","_loop","row","tableRow","csvCol","length","sessionAMerged","sessionA","spanish","characterBuilders","primetime","none","sessionBMerged","sessionB","afterProgramming","roomA","find","c","roomB","sessionAClassroom","sessionBClassroom","push","dataMapSessionARowData","dataMapSessionBRowData","names","forEach","assign","err","alert","col","react_default","a","createElement","key","className","react_csv_reader_default","cssClass","label","onFileLoaded","onError","showError","Fragment","react_csv","es","defaultPageSize","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76c81891.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport CSVReader from 'react-csv-reader';\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport {CSVLink} from 'react-csv';\n\nconst accessors = [\n  \"id\",\n  \"studentFirst\",\n  \"studentLast\",\n  \"grade\",\n  \"teacher\",\n  \"parentFirst\",\n  \"parentLast\",\n  \"parentEmail\",\n  \"parentPhone\",\n  \"alternateFirst\",\n  \"alternateLast\",\n  \"alternateEmail\",\n  \"alternatePhone\",\n  \"spanish\",\n  \"characterBuilders\",\n  \"primetime\",\n  \"none\",\n  \"other\",\n  \"ignore1\",\n  \"ignore2\",\n  \"sessionA\",\n  \"sessionB\",\n];\n\nconst classroomForSessionA = [\n  { name: \"Chess (TK-5th) A\", room: \"room1\" },\n  { name: \"Coding (2nd-5th)\", room: \"room2\" },\n  { name: \"Capoeira (K-2nd) A\", room: \"room3\" },\n  { name: \"Circus Arts (TK-5th) A\", room: \"room4\" },\n  { name: \"Ceramics (TK-1st) A\", room: \"room5\" },\n  { name: \"Flamenco (TK-5th) A\", room: \"room6\" },\n  { name: \"Gardening (K-5th) A\", room: \"room7\" },\n  { name: \"Soccer (TK-2nd)\", room: \"room8\" },\n  { name: \"WOW LEGO速 Early Engineering 1 (TK-2nd) A\", room: \"room9\" },\n  { name: \"WOW LEGO速 Elem. Engineering 2 (2nd-5th) A\", room: \"room10\" },\n  { name: \"Yoga (TK-5th) A\", room: \"room11\" },\n];\n\nconst classroomForSessionB = [\n  { name: \"Capoeira (3rd-5th) B\", room: \"room1\" },\n  { name: \"Ceramics (2nd-5th) B\", room: \"room2\" },\n  { name: \"Chess (TK-5th) B\", room: \"room3\" },\n  { name: \"Circus Arts (TK-5th) B\", room: \"room4\" },\n  { name: \"Coding (2nd-5th) B\", room: \"room5\" },\n  { name: \"Flamenco (TK-5th) B\", room: \"room6\" },\n  { name: \"Gardening (K-5th) B\", room: \"room7\" },\n  { name: \"Soccer (3rd-5th) B\", room: \"room8\" },\n  { name: \"WOW LEGO速 Early Engineering 1 (TK-2nd) B\", room: \"room9\" },\n  { name: \"WOW LEGO速 Elem. Engineering 2 (2nd-5th) B\", room: \"room10\" },\n  { name: \"Yoga (TK-5th) B\", room: \"room11\" },\n];\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      columns: [],\n      loadTable: false,\n      fullData: [],\n      dupes: [],\n      afterSchoolPrograms: [],\n      afterSchoolProgramsColumns: [],\n      dataMapSessionA : {},\n      dataMapSessionB: {},\n    };\n    this.loadTable = this.loadTable.bind(this);\n  }\n\n  loadTable(csvRows) {\n    const fullData = [];\n    let dataMapSessionA = [\n      { name: \"Chess (TK-5th) A\", data: [] },\n      { name: \"Coding (2nd-5th)\", data: [] },\n      { name: \"Capoeira (K-2nd) A\", data: [] },\n      { name: \"Circus Arts (TK-5th) A\", data: [] },\n      { name: \"Ceramics (TK-1st) A\", data: [] },\n      { name: \"Flamenco (TK-5th) A\", data: [] },\n      { name: \"Gardening (K-5th) A\", data: [] },\n      { name: \"Soccer (TK-2nd)\", data: [] },\n      { name: \"WOW LEGO速 Early Engineering 1 (TK-2nd) A\", data: [] },\n      { name: \"WOW LEGO速 Elem. Engineering 2 (2nd-5th) A\", data: [] },\n      { name: \"Yoga (TK-5th) A\", data: [] },\n    ];\n    let dataMapSessionB = [\n      { name: \"Capoeira (3rd-5th) B\", data: [] },\n      { name: \"Ceramics (2nd-5th) B\", data: [] },\n      { name: \"Chess (TK-5th) B\", data: [] },\n      { name: \"Circus Arts (TK-5th) B\", data: [] },\n      { name: \"Coding (2nd-5th) B\", data: [] },\n      { name: \"Flamenco (TK-5th) B\", data: [] },\n      { name: \"Gardening (K-5th) B\", data: [] },\n      { name: \"Soccer (3rd-5th) B\", data: [] },\n      { name: \"WOW LEGO速 Early Engineering 1 (TK-2nd) B\", data: [] },\n      { name: \"WOW LEGO速 Elem. Engineering 2 (2nd-5th) B\", data: [] },\n      { name: \"Yoga (TK-5th) B\", data: [] },\n    ];\n\n    let headers = csvRows[0].map((h, idx) => {\n      return {'Header': h, 'accessor': accessors[idx] || h }\n    });\n\n    this.setState({columns: headers});\n\n    for(let row = 1; row < csvRows.length; row++) {\n      let tableRow = {};\n\n\n      for(let csvCol = 0; csvCol < csvRows[0].length; csvCol++) {\n        // set tableRow property\n        // property name = header\n        // property value = row value\n        tableRow[headers[csvCol].accessor] = csvRows[row][csvCol];\n      }\n\n      // Merging Rules for Concurrent After School Programming\n      // Spanish is always session A\n      // Primetime fills in session A or session B\n      // Character Builders files in session A or session B\n      // Primetime or Character Builders should be shown as after school programming IF session A and session B have classes\n      tableRow.sessionAMerged = tableRow.sessionA != 'None' && tableRow.sessionA != ''\n                                ? tableRow.sessionA\n                                : tableRow.spanish\n                                  ? tableRow.spanish\n                                  : tableRow.characterBuilders\n                                    ? tableRow.characterBuilders\n                                    : tableRow.primetime\n                                      ? tableRow.primetime\n                                      : tableRow.none ? tableRow.none : 'None';\n      tableRow.sessionBMerged = tableRow.sessionB != 'None' && tableRow.sessionB != ''\n                                ? tableRow.sessionB\n                                : tableRow.characterBuilders\n                                  ? tableRow.characterBuilders\n                                  : tableRow.primetime\n                                    ? tableRow.primetime\n                                    : tableRow.none ? tableRow.none : 'None';\n\n      tableRow.afterProgramming = tableRow.characterBuilders\n                                  ? tableRow.characterBuilders\n                                  : tableRow.primetime\n                                    ? tableRow.primetime\n                                    : tableRow.none ? tableRow.none : 'None';\n\n      const roomA = classroomForSessionA.find(c => c.name === tableRow.sessionA);\n      const roomB = classroomForSessionB.find(c => c.name === tableRow.sessionB);\n      tableRow.sessionAClassroom = tableRow.sessionA != 'None' && tableRow.sessionA != '' && roomA ? roomA.room : 'N/A';\n      tableRow.sessionBClassroom = tableRow.sessionB != 'None' && tableRow.sessionB != '' && roomB ? roomB.room : 'N/A';\n\n      fullData.push(tableRow);\n\n      // Push to class specific for sessionA and sessionB\n      const dataMapSessionARowData = dataMapSessionA.find(c => c.name === tableRow.sessionA);\n      if(dataMapSessionARowData) {\n        dataMapSessionARowData.data.push(tableRow);\n      }\n      const dataMapSessionBRowData = dataMapSessionB.find(c => c.name === tableRow.sessionB);\n      if(dataMapSessionBRowData) {\n        dataMapSessionBRowData.data.push(tableRow);\n      }\n    }\n\n    this.setState({fullData: fullData});\n    this.setState({dataMapSessionA: dataMapSessionA});\n    this.setState({dataMapSessionB: dataMapSessionB});\n    this.setState({loadTable: true});\n\n    ////////// Dupes\n    // Find all where\n    const firstName = 'studentFirst';\n    const lastName = 'studentLast';\n    const names = {};\n\n\n    const dupes = [];\n    this.state.fullData.forEach(row => {\n      let name = row[firstName] + ' ' + row[lastName];\n      if(names[name]) {\n        dupes.push(Object.assign({}, row));\n      }\n      else {\n        names[name] = 1;\n      }\n    });\n    this.setState({dupes: dupes});\n  }\n\n  showError(err) {\n    alert(err);\n  }\n\n  render() {\n    const headers = this.state.columns.map((col, idx) => {\n      return <li key={col.Header + idx}>{col.accessor}</li>\n    });\n\n    const afterSchoolProgramsColumns = [\n      {'Header': 'Student First Name', 'accessor': 'studentFirst'},\n      {'Header': 'Student Last Name', 'accessor': 'studentLast'},\n      {'Header': 'Grade', 'accessor': 'grade'},\n      {'Header': 'Teacher', 'accessor': 'teacher'},\n      {'Header': 'Parent First Name', 'accessor': 'parentFirst'},\n      {'Header': 'Parent Last Name', 'accessor': 'parentLast'},\n      {'Header': 'Parent Email', 'accessor': 'parentEmail'},\n      {'Header': 'Parent Phone', 'accessor': 'parentPhone'},\n      {'Header': 'Alternate First Name', 'accessor': 'alternateFirst'},\n      {'Header': 'Alternate Last Name', 'accessor': 'alternateLast'},\n      {'Header': 'Alternate Email', 'accessor': 'alternateEmail'},\n      {'Header': 'Alternate Phone', 'accessor': 'alternatePhone'},\n      {'Header': 'Spanish', 'accessor': 'spanish'},\n      {'Header': 'CB', 'accessor': 'characterBuilders'},\n      {'Header': 'PT', 'accessor': 'primetime'},\n      {'Header': 'A', 'accessor': 'sessionA'},\n      {'Header': 'B', 'accessor': 'sessionB'},\n      {'Header': 'A Merged', 'accessor': 'sessionAMerged'},\n      {'Header': 'B Merged', 'accessor': 'sessionBMerged'},\n      {'Header': 'A Classroom', 'accessor': 'sessionAClassroom'},\n      {'Header': 'B Classroom', 'accessor': 'sessionBClassroom'},\n      {'Header': 'After Programming', 'accessor': 'afterProgramming'},\n    ];\n\n    return (\n      <div className=\"App\">\n        <CSVReader\n          cssClass=\"csv-reader-input\"\n          label=\"Select CSV\"\n          onFileLoaded={this.loadTable}\n          onError={this.showError}\n        />\n        { this.state.loadTable &&\n          <>\n            <h1>Session A</h1>\n          {this.state.dataMapSessionA.map((sessionA) => <><CSVLink\n              data={sessionA.data}>Download {sessionA.name}</CSVLink><br/></>\n          )}\n            <h1>Session B</h1>\n          { this.state.dataMapSessionB.map((sessionB) =>\n            <><CSVLink\n              data={sessionB.data}>Download {sessionB.name}</CSVLink><br/></>\n          )}\n            <br/>\n            <h1>All</h1>\n            <ReactTable\n              defaultPageSize={300}\n              data={this.state.fullData}\n              columns={this.state.columns}/>\n\n            <h1>Duplicates</h1>\n            <ReactTable\n              data={this.state.dupes}\n              columns={this.state.columns}/>\n\n            <h1>After School Programs</h1>\n            <ReactTable\n              defaultPageSize={300}\n              data={this.state.fullData}\n              columns={afterSchoolProgramsColumns}/>\n\n            <h1>Session A</h1>\n            {\n              this.state.dataMapSessionA.map((sessionA) =>\n                                               <>\n                                                 <h2>{sessionA.name}</h2>\n                                                 <ReactTable\n                                                   defaultPageSize={25}\n                                                   data={sessionA.data}\n                                                   columns={afterSchoolProgramsColumns}/>\n                                               </>\n              )\n            }\n            <h1>Session B</h1>\n            {\n              this.state.dataMapSessionB.map((sessionB) =>\n                                               <>\n                                                 <h2>{sessionB.name}</h2>\n                                                 <ReactTable\n                                                   defaultPageSize={25}\n                                                   data={sessionB.data}\n                                                   columns={afterSchoolProgramsColumns}/>\n                                               </>\n              )\n            }\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}